#!/usr/bin/env -S stimela run

_include:
  - parrot-cabs.yml

## this augments the standard 'opts' config section to tweak logging settings
opts:
  log:
    dir: logs/log-{config.run.datetime}
    name: log-{info.fqname}
    nest: 2
    symlink: log
  backend:
    select: singularity
    rlimits:
      NOFILE: 100000  # set high limit on number of open files

lightcurve-pipeline:
  name: lightcurve-pipeline
  info: "Generic pipeline for extracting lightcurves from interferometer data."

  assign:
    dir-out: '{recipe.dirs.base}/{recipe.dirs.sub}{recipe.output-suffix}'  # output products go here
    image-prefix: '{recipe.dir-out}/im{info.suffix}{recipe.variant}/im{info.suffix}{recipe.variant}'  # prefix for image names at each step
    log.dir: '{recipe.dir-out}/logs/log-{config.run.datetime}'  # put logs into output dir
    # some more directory assignments
    dirs:
      ms: msdir  # MSs live here
      temp: "{config.run.env.HOME}/tmp"  # temp files go here
      base: /home/kenyon/ATA_experiments/lightcurve_extraction/working_dir  # base project directory -- directory of recipe by default

    # _chan1x: =recipe.chan1 - 1       # end channel, inclusive -- helper variable to form CASA spw
    casa-spw: 0 #"0:{recipe.chan0}~{recipe._chan1x}"  # CASA spw parameter

    # extra lightcurve suffix, added if convolving
    lc-suffix: =IF(recipe.convolve.arcsec or recipe.convolve.time, "-{recipe.convolve.time:.0f}s-{recipe.convolve.arcsec:.0f}asec", "")

  assign_based_on:
    _include: datasets.yml

  inputs:
    obs:
      choices: [ATA_test]
      info: "Selects observation, see datasets.yml for list of observations."
      default: ATA_test
    output-suffix:
      dtype: str
      default: ''
    variant:
      dtype: str
      default: ''
    htc_cadence:
      dtype: int
      default: 1
    htc_size:
      dtype: int
      default: 512
    htc_scale:
      dtype: str
      default: '{recipe.pixel_scale}'
    htc_weight:
      dtype: str
      default: natural
    convolve:
      arcsec:
        dtype: float
        default: 0
      time:
        dtype: float
        default: 120
    mad_flag:
      dtype: bool
      default: false
      aliases:
        - (quartical).mad_flags.enable
    publish-plots:
      dtype: bool
      default: false
    publish-plot-title:
      default: 'Observation {recipe.obs}: peak $ {{peak_ujy:.0f}}\pm{{peak_std_ujy:.0f}} $ uJy'

  aliases:
    ms:
      - (wsclean).ms
      - (quartical).input_ms.path
    weight:
      - (wsclean).weight
      - (wsclean_pol).weight
    minuv-l:
      - (wsclean).minuv-l
    taper-inner-tukey:
      - (wsclean).taper-inner-tukey

  steps:
    flag-save:
      tags: [init, never]
      cab: casa.flagman
      params:
        ms: =recipe.ms
        mode: save
        versionname: =recipe.initial-flag-version

    flag-reset:
      cab: casa.flagman
      params:
        ms: =recipe.ms
        mode: restore
        versionname: =recipe.initial-flag-version

    image-1:
      info: "auto-masked deep I clean"
      _use: lib.steps.wsclean.rrat
      params:
        column: DATA
        niter: 15000
        auto-threshold: 2
        auto-mask: 4

    mask-1:
      recipe: make_masks
      params:
        restored-image: "{previous.restored.mfs}"
        prefix: "{previous.prefix}"

    flagsummary-1:
      cab: casa.flagsummary
      params:
        ms: =recipe.ms
        spw: =recipe.casa-spw

    predict-1:
      _use: lib.steps.wsclean.predict
      params:
        ms: '{recipe.ms}'
        prefix: '{steps.image-1.prefix}'
        nchan: '{steps.image-1.nchan}'

    selfcal-1:
      _use: lib.steps.quartical.k
      params:
        input_ms:
          time_chunk: 0
          select_uv_range: [0,0]
        output:
          flags: true
        K:
          time_interval: 0
          type: delay_and_offset

    flagsummary-2:
      cab: casa.flagsummary
      params:
        ms: =recipe.ms
        spw: =recipe.casa-spw

    image-2:
      _use: lib.steps.wsclean.rrat
      params:
        auto-threshold: 1
        auto-mask: 4

    source-catalog:
      cab: bdsf.catalog
      params:
        image: =steps.image-2.restored.mfs
        thresh_pix: 4
        thresh_isl: 3
        rms_box: [20,5]
        rms_map: false
        catalog_format: ascii
        outfile_gaul: =STRIPEXT(current.image) + '.gaul'
        outfile_srl: =STRIPEXT(current.image) + '.srl'

    # NB: This cab requires manual specification of the catalogue path. 
    # This needs to be simplified and automated. The same is true of the
    # field centre.
    make-master-catalog:
      cab: make-master-catalog
      params:
        master_catalog: =recipe.dir-out + '/mastercat.ecsv'
        ra0: 210.9107505deg
        dec0: 54.3116944deg
        max_radius_deg: 1.5
        catalogs:
          bdsf: [/home/kenyon/ATA_experiments/lightcurve_extraction/working_dir/ATA_test/im2/im2-MFS-image.srl, 6, main]  # HACKY!!

    save-ms-info:
      cab: save-ms-info
      params:
        ms: =recipe.ms
        ms-info-file: '{recipe.ms}.yml'

    ms-info:
      cab: load-ms-info
      params:
        ms-info-file: =steps.save-ms-info.ms-info-file
      tags: [lightcurves]

    predict-2:
      _use: lib.steps.wsclean.predict
      params:
        ms: '{recipe.ms}'
        prefix: =steps.image-2.prefix
        nchan: =steps.image-2.nchan

    add-corrected-data:
      cab: msutils.addcol
      params:
        msname: =recipe.ms
        colname: CORRECTED_DATA

    subtract_model:
      cab: taql.update
      params:
        ms: "{recipe.ms}"
        commands: =LIST("set", "CORRECTED_DATA={steps.image-2.column}-MODEL_DATA")

    image-4htc:
      _use: lib.steps.wsclean.dirty
      params:
        column: CORRECTED_DATA
        prefix: =DIRNAME(recipe.image-prefix) + '-cad{recipe.htc_cadence}/images/cad{recipe.htc_cadence}'
        intervals-out: =steps.ms-info.num_intervals / recipe.htc_cadence
        nchan: 1
        niter: 0
        weight: '{recipe.htc_weight}'
        size: '{recipe.htc_size}'
        scale: '{recipe.htc_scale}'
        reorder: true
      tags: [lightcurves]
      skip_if_outputs: fresh

    cube-4htc:
      cab: stack_time_cube
      params:
        images: =steps.image-*htc.dirty.per-interval
        cube: =DIRNAME(recipe.image-prefix) + '-cad{recipe.htc_cadence}/cube-{recipe.htc_cadence}-dirty.fits'
        ms: =recipe.ms
        cadence: =recipe.htc_cadence
      skip_if_outputs: fresh
      tags: [lightcurves]

    extract-metadata:
      cab: extract_fits_metadata
      params:
        images: =previous.images
        timestamps_file: =STRIPEXT(previous.cube) + '.timestamps.p'
        beams_file: =STRIPEXT(previous.cube) + '.beams.p'
      skip_if_outputs: fresh
      tags: [lightcurves]

    cube-convolve:
      cab: convolve_image
      params:
        image: =steps.cube-4htc.cube
        size_arcsec: =recipe.convolve.arcsec
        size_sec: =recipe.convolve.time
        outimage: =STRIPEXT(current.image) + '{recipe.lc-suffix}.fits'
      skip: =not recipe.lc-suffix
      skip_if_outputs: fresh
      tags: [lightcurves]

    extract-lightcurves:
      info: extracts lightcurves from convolved cube
      skip: =not recipe.lc-suffix # skip if lc-suffix is not set: we don't make a convolved cube then
      cab: extract_lightcurves
      params:
        cube: =IF(recipe.lc-suffix, steps.cube-convolve.outimage, steps.cube-4htc.cube)
        outdir: '{recipe.dir-out}/lc{recipe.htc_cadence}{recipe.lc-suffix}'
        catalog: =steps.make-master-catalog.master_catalog
        regfile: '{current.outdir}/lc{recipe.htc_cadence}-{recipe.obs}.reg'
        statsfile: '{current.outdir}/lc{recipe.htc_cadence}-{recipe.obs}.stats.p'
        output_file_label: "-{recipe.obs}"
        srctype: P
        minflux: 3uJy
        flag_excess_std: 3
        within: =recipe.lightcurves-within
        nsrc: 50000
        ncpu: 1  #=root.ncpu
        fluxcols: =recipe.catalog-flux-columns
        plot_title: =IF(recipe.publish-plots, NOSUBST(recipe.publish-plot-title), UNSET)
      skip_if_outputs: fresh
      tags: [lightcurves]

    extract-lightcurves-1:
      info: extracts lightcurves from raw cube
      _use: lightcurve-pipeline.steps.extract-lightcurves
      skip: false
      params:
        cube: =steps.cube-4htc.cube
        outdir: '{recipe.dir-out}/lc{recipe.htc_cadence}'
      skip_if_outputs: fresh
      tags: [lightcurves]
