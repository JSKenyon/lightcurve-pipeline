_include:
  - masking_cabs.yml

## this augments the standard 'opts' config section to tweak logging settings
opts:
  log:
    dir: logs/log-{config.run.datetime}
    name: log-{info.fqname}
    nest: 2
    symlink: log
  backend:
    select: singularity
    rlimits:
      NOFILE: 100000  # set high limit on number of open files

target-masking:
  name: target-masking
  info: |
    Recipe for doing basic imaging and deconvolution with the intention of
    constructing an initial mask. This recipe was derived from the approach
    taken in oxkat (https://github.com/IanHeywood/oxkat).

  inputs:
    ms-path:
      dtype: MS
      required: true
    data-column:
      dtype: str
      default: 'DATA'
    image-prefix:
      dtype: str
      required: true
    scale:
      dtype: Union[str,float]
      default: '1.2asec'
    weight:
      dtype: str
      default: 'briggs 0.0'
    size:
      dtype: int
      default: 2048
    abs-threshold:
      dtype: float
      default: 1e-3

  outputs:
    outdir-path:
      dtype: Directory
      required: true
      writable: true
      path_policies:
        mkdir_parent: true
    output-mask:  # Arbitrary output name which maps...
      aliases:
        - make-mask.outfile  # ...to this value.

  assign:
    # Extract the ms name from the full path.
    ms-name: =BASENAME(recipe.ms-path)
    # Redirect logs to the output directory.
    log.dir: '{recipe.outdir-path}/logs/log-{config.run.datetime}'

  steps:
    image-without-mask:
      info: |
        Perform basic imaging and deconvolution of the target using an absolute
        flux threshold.
      _use: lib.steps.wsclean.masking-base
      params:
        ms: =recipe.ms-path
        column: =recipe.data-column  # -data-column in wsclean
        prefix: '{recipe.outdir-path}/{recipe.image-prefix}'
        temp-dir: '{recipe.outdir-path}/tmp'
        scale: =recipe.scale
        weight: =recipe.weight
        size: =recipe.size
        abs-threshold: =recipe.abs-threshold

    make-mask:
      info: |
        Use breizorro to generate a mask from the MFS image generated by the
        previous step.
      cab: breizorro
      params:
        restored-image: =previous.restored.mfs
        threshold: 6
        boxsize: 50
        dilate: 3
